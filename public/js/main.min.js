/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ([
/* 0 */,
/* 1 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   checkForMobile: () => (/* binding */ checkForMobile),
/* harmony export */   generateTableOfContents: () => (/* binding */ generateTableOfContents),
/* harmony export */   sanitizeID: () => (/* binding */ sanitizeID),
/* harmony export */   watchElementPosition: () => (/* binding */ watchElementPosition)
/* harmony export */ });
/**
 * ####################
 * # Helper Functions #
 * ####################
 * 
 * This file contains all of the helper functions for main.js.
 */

function checkForMobile(mobileBreakpointWidth) {
    /**
     * Compares the width of the viewport with the provided
     * mobile breakpoint width, to determine if the page is
     * loaded on a mobile device.
     * 
     * @param  {Integer} mobileBreakpointWidth The mobile breakpoint width.
     * @return {Boolean} Will return false if viewport is larger than the
     *                   breakpoint, will return true if it is less than or
     *                   equal to the breakpoint.
     */
    
    const htmlElement = document.querySelector('html');
    const viewportWidth = htmlElement.clientWidth;
    
    let isMobileDevice = false;
    
    viewportWidth > mobileBreakpointWidth ? isMobileDevice = false: isMobileDevice = true;
    
    return isMobileDevice;

}


function generateTableOfContents(parentNode, contentClass, tableClass) {
    /**
     * Generates and inserts the HTML structure for the Table of Contents (ToC).
     * 
     * @param   {String} parentNode   The class of the parent node that the
     *                                ToC should appear in as a child element.
     * @param   {String} contentClass The class of the sibling element that
     *                                the ToC should appear along side of.
     * @param   {String} tableClass   The class that must be added to the ToC.
     */

    let parent = document.querySelector(parentNode);
    let content = document.querySelector(contentClass);

    let tableOfContents = document.createElement('nav');
    let unorderedList = document.createElement('ul');

    let articles = [...content.children];

    articles.forEach((article) => {

        let currentArticleHeading = article.querySelector('h4');
        let articleHeading = currentArticleHeading.innerText;

        let articleId = sanitizeID(articleHeading);
        
        currentArticleHeading.parentElement.id = articleId;

        let listItem = document.createElement('li');
        let anchor = document.createElement('a');

        anchor.href = '#' + articleId;
        anchor.innerText = articleHeading;

        listItem.appendChild(anchor);
        unorderedList.appendChild(listItem);

    });

    tableOfContents.classList.add(tableClass);
    tableOfContents.appendChild(unorderedList);

    parent.insertBefore(tableOfContents, content);

}

function sanitizeID(string) {
    /**
     * Santizes a string to be used as an ID. Spaces are replaced
     * with hyphens, and all text is converted to lowercase.
     * 
     * @param  {String} string Text to apply the sanitization to.
     * @return  {String} The sanitized text to be used as an ID.
     */

    string = string.replaceAll(' ', '-');
    string = string.toLowerCase();
    
    return string;

}


function watchElementPosition(entries) {
    /**
     * Watches elements to that apply and remove an active class
     * as necessary.
     * 
     * @param  {String} entries The entries from an Intersection Observer.
     */

    entries.forEach((entry) => {

        if (entry.isIntersecting) {

            let entryElementName = entry.target.nodeName;
            let parent, currentActiveElement, newActiveId = null;

            if (entryElementName == 'H3') {
    
                parent = document.querySelector('header nav');
    
            } else if (entryElementName == 'H4') {
    
                parent = document.querySelector('.work-section__table-of-contents');
    
            }
            
            if (parent) {
         
                currentActiveElement = parent.querySelector('.active');
         
            }
            
            if (currentActiveElement) {
         
                currentActiveElement.classList.remove('active');
         
            }

            if (entryElementName == 'H3') {
         
                newActiveId = entry.target.closest('section').id;
         
            } else if (entryElementName == 'H4') {
         
                newActiveId = entry.target.parentElement.id;
         
            }

            let newActiveElement = parent.querySelector('a[href="#' + newActiveId + '"]');

            if (entryElementName == 'H3') {
         
                newActiveElement.classList.add('active');
         
            } else if (entryElementName == 'H4') {
         
                newActiveElement.parentElement.classList.add('active');
         
            }

        }

    });
}



/***/ })
/******/ 	]);
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);


document.addEventListener("DOMContentLoaded", (event) => {
    


    /**
     * ####################
     * # Console Messages #
     * ####################
     */

    const welcome = '%cAhoy! \u26F5\n';
    const welcomeStyle = 'font-size: 2rem;';
    const intro = `%cWelcome to my portfolio website! I hope you have fun looking around.\n\nIf you have any questions, please feel free to contact me!\n\nBy the way, if you want to turn the flashlight effect off, try double-clicking!`;
    const introStyle = 'font-size: 1.25rem;';

    console.log(welcome + intro, welcomeStyle, introStyle);


    /**
     * ####################
     * # Global Variables #
     * ####################
     */

    const mobileBreakpointWidth = 767;
    const isMobileDevice = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.checkForMobile)(mobileBreakpointWidth);


    /**
     * #################
     * # Sticky Header #
     * #################
     */
    
    const header = document.querySelector('header');
    
    let scrollThrottle = false;

    document.addEventListener("scroll", (event) => {
        
        let scrollPosition = window.scrollY;

        if (!scrollThrottle) {

            window.requestAnimationFrame(() => {
                
                if (scrollPosition > 0) {
                    
                    header.classList.add('site-header--shadow');

                } else {
                    
                    header.classList.remove('site-header--shadow');

                }

                scrollThrottle = false;

            });

            scrollThrottle = true;

        }

    });

    
    /**
     * #####################
     * # Cursor Flashlight #
     * #####################
     */

    const flashlight = document.getElementById('flashlight');
    const lightOn = '0.4';
    const lightOff = '0';
    
    let lightSwitch = true;

    if (!isMobileDevice) {

        document.querySelector('body').addEventListener("mouseenter", (event) => {

            lightSwitch ? flashlight.style.opacity = lightOn : null;

        });
        
        document.querySelector('body').addEventListener('mousemove', (event) => {
            
            flashlight.style.left = `${event.clientX}px`;
            flashlight.style.top = `${event.clientY + window.scrollY}px`;

        });
        
        document.querySelector('body').addEventListener('mouseleave', (event) => {

            lightSwitch ? flashlight.style.opacity = lightOff : null;

        });
        
        document.querySelector('body').addEventListener('click', (event) => {

            if (event.detail === 2) {

                flashlight.style.opacity == lightOff ?
                (flashlight.style.opacity = lightOn, lightSwitch = true) :
                (flashlight.style.opacity = lightOff, lightSwitch = false);

            }

        });

    }


    /**
     * ##########################
     * # Intersection Observers #
     * ##########################
     */

    (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.generateTableOfContents)('.work-section', '.work-section__articles', 'work-section__table-of-contents');


    /**
     * ##########################
     * # Intersection Observers #
     * ##########################
     */

    const articlesToObserve = document.querySelectorAll('.work-section article h4');
    const tableOfContentsOptions = { rootMargin: '0px 0px -20% 0px', threshold: 1 };
    
    const tableOfContentsObserver = new IntersectionObserver(_helpers_js__WEBPACK_IMPORTED_MODULE_0__.watchElementPosition, tableOfContentsOptions);

    articlesToObserve.forEach((article) => { tableOfContentsObserver.observe(article); });
    
    const headings = document.querySelectorAll('main h3');
    const headingOptions = { rootMargin: '0px 0px -40% 0px', threshold: 1 };
    
    const headingObserver = new IntersectionObserver(_helpers_js__WEBPACK_IMPORTED_MODULE_0__.watchElementPosition, headingOptions);

    headings.forEach((heading) => { headingObserver.observe(heading); });


    /**
     * #################
     * # Project Cards #
     * #################
     */

    const projectCards = document.querySelectorAll('.projects-card');

    projectCards.forEach((card) => {
        
        card.addEventListener('click', (event) => {
        
            card.classList.toggle('flipped');
        
        });
    
    });



});


})();

/******/ })()
;